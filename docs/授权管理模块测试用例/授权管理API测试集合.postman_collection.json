{
	"info": {
		"_postman_id": "auth-management-api-test",
		"name": "智能灌溉系统 - 授权管理API测试集合",
		"description": "完整的授权管理模块API测试用例集合，包含用户注册、登录、令牌刷新、登出、撤销所有令牌等核心认证功能测试。\n\n测试覆盖：正常流程、异常处理、安全验证、边界值测试等。",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. 用户注册API测试",
			"item": [
				{
					"name": "1.1 正常注册农户用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user info\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"    pm.expect(jsonData.data.username).to.eql('farmer001');",
									"    pm.expect(jsonData.data.userType).to.eql('FARMER');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"farmer001\",\n    \"password\": \"password123\",\n    \"email\": \"farmer001@example.com\",\n    \"realName\": \"张三\",\n    \"phoneNumber\": \"13812345678\",\n    \"userType\": \"FARMER\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "1.2 正常注册管理员用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has admin user info\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data.userType).to.eql('ADMIN');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin001\",\n    \"password\": \"admin123456\",\n    \"email\": \"admin@example.com\",\n    \"realName\": \"管理员\",\n    \"phoneNumber\": \"13800138001\",\n    \"userType\": \"ADMIN\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "1.3 正常注册技术员用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has technician user info\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data.userType).to.eql('TECHNICIAN');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"tech001\",\n    \"password\": \"tech123456\",\n    \"email\": \"tech@example.com\",\n    \"realName\": \"技术员\",\n    \"phoneNumber\": \"13800138002\",\n    \"userType\": \"TECHNICIAN\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "1.4 注册用户（默认用户类型）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Default user type is FARMER\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data.userType).to.eql('FARMER');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"defaultuser\",\n    \"password\": \"default123\",\n    \"email\": \"default@example.com\",\n    \"realName\": \"默认用户\",\n    \"phoneNumber\": \"13800138003\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. 注册字段验证错误测试",
			"item": [
				{
					"name": "2.1 用户名太短错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('用户名');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"ab\",\n    \"password\": \"password123\",\n    \"email\": \"test@example.com\",\n    \"realName\": \"测试用户\",\n    \"phoneNumber\": \"13800138000\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "2.2 密码太短错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains password validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('密码');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"123\",\n    \"email\": \"test@example.com\",\n    \"realName\": \"测试用户\",\n    \"phoneNumber\": \"13800138000\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "2.3 邮箱格式错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains email validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('邮箱');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser2\",\n    \"password\": \"password123\",\n    \"email\": \"invalid-email-format\",\n    \"realName\": \"测试用户\",\n    \"phoneNumber\": \"13800138000\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "2.4 手机号格式错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains phone validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('手机号');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser3\",\n    \"password\": \"password123\",\n    \"email\": \"test@example.com\",\n    \"realName\": \"测试用户\",\n    \"phoneNumber\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "2.5 真实姓名为空错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains realName validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('真实姓名');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser4\",\n    \"password\": \"password123\",\n    \"email\": \"test@example.com\",\n    \"realName\": \"\",\n    \"phoneNumber\": \"13800138000\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. 注册重复数据错误测试",
			"item": [
				{
					"name": "3.1 用户名已存在错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Response contains conflict error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('用户名');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"farmer001\",\n    \"password\": \"differentpassword\",\n    \"email\": \"different@example.com\",\n    \"realName\": \"不同用户\",\n    \"phoneNumber\": \"13900000000\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "3.2 邮箱已存在错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Response contains email conflict error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"    pm.expect(jsonData.message).to.include('邮箱');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"differentuser\",\n    \"password\": \"password123\",\n    \"email\": \"farmer001@example.com\",\n    \"realName\": \"不同用户\",\n    \"phoneNumber\": \"13900000001\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. 用户登录API测试",
			"item": [
				{
					"name": "4.1 正常登录农户用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has auth tokens\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data).to.have.property('accessToken');",
									"    pm.expect(jsonData.data).to.have.property('refreshToken');",
									"    pm.expect(jsonData.data).to.have.property('expiresIn');",
									"    pm.expect(jsonData.data).to.have.property('userInfo');",
									"    ",
									"    // 保存令牌到环境变量",
									"    pm.environment.set('accessToken', jsonData.data.accessToken);",
									"    pm.environment.set('refreshToken', jsonData.data.refreshToken);",
									"});",
									"",
									"pm.test(\"User info is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.userInfo.username).to.eql('farmer001');",
									"    pm.expect(jsonData.data.userInfo.userType).to.eql('FARMER');",
									"    pm.expect(jsonData.data.userInfo.status).to.eql('ACTIVE');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"farmer001\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "4.2 管理员登录",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Admin login successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data.userInfo.userType).to.eql('ADMIN');",
									"    ",
									"    // 保存管理员令牌",
									"    pm.environment.set('adminAccessToken', jsonData.data.accessToken);",
									"    pm.environment.set('adminRefreshToken', jsonData.data.refreshToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin001\",\n    \"password\": \"admin123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. 登录错误测试",
			"item": [
				{
					"name": "5.1 用户名不存在错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response contains authentication error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"nonexistentuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "5.2 密码错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response contains authentication error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"farmer001\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. 令牌刷新API测试",
			"item": [
				{
					"name": "6.1 正常刷新令牌",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has new auth tokens\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"    pm.expect(jsonData.data).to.have.property('accessToken');",
									"    pm.expect(jsonData.data).to.have.property('refreshToken');",
									"    ",
									"    // 更新令牌",
									"    pm.environment.set('accessToken', jsonData.data.accessToken);",
									"    pm.environment.set('refreshToken', jsonData.data.refreshToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "refresh"]
						}
					},
					"response": []
				},
				{
					"name": "6.2 刷新令牌无效错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response contains token error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"invalid_refresh_token\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "refresh"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "7. 用户登出API测试",
			"item": [
				{
					"name": "7.1 正常登出",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Logout successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "logout"]
						}
					},
					"response": []
				},
				{
					"name": "7.2 登出无效令牌错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response contains token error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"invalid_refresh_token\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "logout"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "8. 撤销所有令牌API测试",
			"item": [
				{
					"name": "8.1 正常撤销所有令牌",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Revoke all tokens successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminAccessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/revoke-all",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "revoke-all"]
						}
					},
					"response": []
				},
				{
					"name": "8.2 未认证撤销令牌错误",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response contains authentication error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/revoke-all",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "revoke-all"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "9. 完整认证流程测试",
			"item": [
				{
					"name": "9.1 注册流程测试用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"flowtest001\",\n    \"password\": \"flowtest123\",\n    \"email\": \"flowtest@example.com\",\n    \"realName\": \"流程测试用户\",\n    \"phoneNumber\": \"13800000999\",\n    \"userType\": \"FARMER\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "9.2 登录流程测试用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Save flow test tokens\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set('flowAccessToken', jsonData.data.accessToken);",
									"    pm.environment.set('flowRefreshToken', jsonData.data.refreshToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"flowtest001\",\n    \"password\": \"flowtest123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": []
				},
				{
					"name": "9.3 刷新流程测试令牌",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update flow test tokens\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set('flowAccessToken', jsonData.data.accessToken);",
									"    pm.environment.set('flowRefreshToken', jsonData.data.refreshToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{flowRefreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "refresh"]
						}
					},
					"response": []
				},
				{
					"name": "9.4 登出流程测试用户",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{flowRefreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "logout"]
						}
					},
					"response": []
				},
				{
					"name": "9.5 验证登出后令牌失效",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Token is revoked\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{flowRefreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "refresh"]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}